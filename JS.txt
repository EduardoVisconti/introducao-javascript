AULA 04

* A diferença entre as funções nomeadas e as funções anônimas

* A escutar eventos do browser com a função addEventListener()

* Que a função criadora de elementos é .createElement()

* A pegar o valor de um input por meio da propriedade .value

* A acessar os input de um form por meio da propriedade .name

* A adicionar elementos na página e dentro de outros elementos com a função appendChild()

-----------
------------

AULA 05

* Dividir o código, separando por funcionalidades do sistema

* Os objetos em Javascript

* A quebrar funções grandes em funções menores ,com cada uma com sua responsabilidade

* A função form.reset() para limpar o formulário

------------
------------

AULA 06

* loop for:

var nomes = ["Douglas", "Flávio", "Nico", "Rômulo", "Leonardo"];

for (var i = 0; i < nomes.length; i++) {
    console.log(nomes[i] + " é instrutor da Alura");
}

* forEach():

nomes.forEach(function(nome) {
    console.log(nome + " é instrutor da Alura");
})

* Mais organização de código, exportando as funções de validação.

* O operador de negação NOT (!)

* Como validar um formulário

* A função push para colocar elementos dentro de um array

* A propriedade innerHTML dos elementos, que foi usada para apagar os itens da <ul>

* O método forEach para percorrer arrays

-------------
-------------

AULA 07

* O novo evento de dblclick

* Como os eventos propagam atráves da página

* A delegação de eventos

* Como animar uma remoção com o setTimeout

-------------
-------------

AULA 08

* O novo evento de input

* O truque de deixar invisível adicionando uma classe com display:none

* Como realizar uma busca, escondendo todos os elementos e mostrando apenas aqueles que nos interessam

* Como buscar por apenas um pedaço de uma palavra com as Expressões Regulares em Javascript

-------------
-------------

AULA 09

* O objeto XMLHttpRequest é quem é responsável por fazer requisições HTTP assíncronas com Javascript. Apesar de ter o XML no nome hoje em dia este objeto pode trafegar diversos outros tipos de dados além do XML, este nome só se manteve devido a um legado histórico.
    
    - E para instanciar um novo Objeto XMLHttpRequest devemos utilizar a sintaxe com a palavrinha new :

    - var xhr = new XMLHttpRequest();

* Como fazer uma requisição assíncrona com o Javascript

* O objeto XMLHttpRequest

* Como configurar e enviar uma requisição

* O evento de load

* O que é a técnica AJAX.

* O formato JSON

* Como converter JSON para um objeto Javascript com a função JSON.parse()

* Como lidar com erros durante o AJAX
